{"ast":null,"code":"const firebase_obj = require('../FirebaseConfig');\nclass DatabaseBackend {\n  constructor() {\n    this.state = {\n      'ref': ''\n    };\n    this.database = firebase_obj.database;\n    this.createRoom = this.createRoom.bind(this);\n    this.togglePlay = this.togglePlay.bind(this);\n    this.setSeek = this.setSeek.bind(this);\n    this.getRef = this.getRef.bind(this);\n    this.addChat = this.addChat.bind(this);\n    this.deleteRoom = this.deleteRoom.bind(this);\n  }\n  async deleteRoom() {\n    this.state.ref.delete();\n  }\n  async createRoom(room_info) {\n    let ref = await this.database.collection('rooms').doc();\n    await ref.set(room_info);\n    this.state.ref = ref;\n    return ref;\n  }\n  async getRef(room_id) {\n    console.log(`getting ref ${room_id}`);\n    let ref = await this.database.collection(`rooms`).doc(room_id);\n    this.state.ref = ref;\n    return ref;\n  }\n  async togglePlay(state) {\n    this.state.ref.update({\n      \"mode\": state\n    });\n  }\n  async setSeek(time) {\n    await this.state.ref.update({\n      \"time\": time\n    });\n    console.log(\"Updated\");\n  }\n  async setURL(url) {\n    await this.state.ref.update({\n      \"url\": url\n    });\n  }\n  async addChat(msg) {\n    await this.state.ref.update({\n      \"chats\": firebase_obj.firebase.firestore.FieldValue.arrayUnion(msg)\n    });\n  }\n  async addSuggestion(sug) {\n    let ref = await this.database.collection(`suggestions`).doc();\n    ref.set(sug);\n  }\n  async addVideo(vid) {\n    await this.state.ref.update({\n      \"video_list\": firebase_obj.firebase.firestore.FieldValue.arrayUnion(vid)\n    });\n  }\n}\nexport default DatabaseBackend;","map":{"version":3,"names":["firebase_obj","require","DatabaseBackend","constructor","state","database","createRoom","bind","togglePlay","setSeek","getRef","addChat","deleteRoom","ref","delete","room_info","collection","doc","set","room_id","console","log","update","time","setURL","url","msg","firebase","firestore","FieldValue","arrayUnion","addSuggestion","sug","addVideo","vid"],"sources":["C:/Users/Natasha Jha/Downloads/GDrive-Party-master/src/components/DatabaseBackend.js"],"sourcesContent":["\nconst firebase_obj = require('../FirebaseConfig');\n\n\nclass DatabaseBackend {\n    constructor() {\n        this.state = {'ref':''};\n        this.database = firebase_obj.database;\n        this.createRoom = this.createRoom.bind(this);\n        this.togglePlay = this.togglePlay.bind(this);\n        this.setSeek = this.setSeek.bind(this);\n        this.getRef = this.getRef.bind(this);\n        this.addChat = this.addChat.bind(this);\n        this.deleteRoom = this.deleteRoom.bind(this);\n    }\n\n    async deleteRoom(){\n        this.state.ref.delete();\n\n    }\n\n    async createRoom(room_info){\n        let ref = await this.database.collection('rooms').doc();\n        await ref.set(room_info);\n        this.state.ref = ref;\n        return ref\n    }\n\n    async getRef(room_id){\n        console.log(`getting ref ${room_id}`)\n        let ref = await this.database.collection(`rooms`).doc(room_id);\n        this.state.ref = ref;\n        return ref;\n\n    }\n\n\n\n    async togglePlay(state){\n        this.state.ref.update({\"mode\":state});\n    }\n\n    async setSeek(time){\n        await this.state.ref.update({\"time\":time});\n        console.log(\"Updated\")\n    }\n\n    async setURL(url){\n        await this.state.ref.update({\"url\":url});\n    }\n\n    async addChat(msg){\n        await this.state.ref.update({\"chats\":firebase_obj.firebase.firestore.FieldValue.arrayUnion(msg)});\n    }\n\n    async addSuggestion(sug){\n        let ref = await this.database.collection(`suggestions`).doc();\n        ref.set(sug);\n    }\n\n    async addVideo(vid){\n        await this.state.ref.update({\"video_list\":firebase_obj.firebase.firestore.FieldValue.arrayUnion(vid)});\n    }\n\n}\n\nexport default DatabaseBackend;"],"mappings":"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"},"metadata":{},"sourceType":"module"}